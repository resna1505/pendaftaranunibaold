========== Ioncube_Decoder 1.1.40  LogFile ==========

=========> S t a g e  0  -  Getting RawData (UnBase64-Raw.bin)

Opening C:\AppServ\www\siakad\tampilan\jam.php
000003AF -> Start of ionCubeData...
00000A0C -> 0000065D Bytes read.
IC_Base64_Marker: '4+oV' Decoding Base64->Bin...

=========> S t a g e  1  -  Validating RawData

ionCubeVersionType: 3CCC22E1 [Encrypted: 149FEC13]
ioncube_Version_Type 3

=========> S t a g e  2  -  Processing RawData

RawBinData_Size: 00000863
FileSizeKey: 2395B45A (RawBinData_Size + 12321) Xor &H23958CDE
Header_FileSizeKey: 2395B458
Header_FileSizeKey and FileSizeKey are different! (Difference: 00000002)
Note: RawBinData_Size calculate from Header_FileSizeKey is: 000008E9  (Difference: 00000086)
Header_Size: 000000BE (InitKey for MT: 6DF277E1)
Adler32_CRC for 'IC_Raw[0004]..[00DC]' and calculated MATCH. CRC: 81706D43

=========> S t a g e  3  -  Extracting Header from RawData (->IC_Header.bin)


=========> S t a g e  4  -  Interpreting IC_Header

Minimum Loader Version: 00.00.00 (for ex. ioncube_loader_win_4.3.dll requires >0301010)
VerData 0x00000003
ObfuFlags 00000000 00000000

ObfuFuncHashSeed: 
Bytecode_XorKey: 92A764C5
 -> The Encoder uses '0x92A764C5' to overwrite/delete the real bytecode key - since there is a LicenseFile(+enforceLicense) from which that value should be retrieved. (However don't worry we'll be able to calcuate that value if there is not LicFile. :)
IncludeXorKey[should be 0xE9FC23B1]: E9FC23B1
LicenseFile: lisensi.txt
DisableCheckingOfLicenseRestrictions: 0
LicensePassphrase: lisensi
CustomErrCallbackHandler: 'ioncube_event_handler'
Enable_auto_prepend_Append_file: 0
Customised error messages entries: 0x00
Include file protection entries: 0x00
Adler32_CRC for '<?php //... ?>' and calculated MATCH. CRC: EB60391D
IC_HeaderEx start: 0086
IC_HeaderEx end: 00AE   IC_Header HeaderSize: 00BE

=========> S t a g e  5  -  Interpreting IC_HeaderEx

0001 <-IC_Type_Minor
0005 <-IC_Type_Major
The file [%s] was encoded with the PHP 5 ionCube Encoder, and requires PHP 5 to be installed.
00000CE7 <-PhpFlags
  0x0001  0001
  0x0002  0002 
  0x0004  0004 
  0x0020  Allow run with untrusted server extensions
  0x0040  PHP5_Body
  0x0080  CmdBytesAreEncrypted
  0x0400  EncryptStrings[KeyWord.c_Object] in memory during Compile& Execute
  0x0800  ObfuscateStripLineNumbers

IC Encoder Registration data(MemberID): 0x10050603  30754
Calculate ByteCode_Key ('0x363432' + sum of the chars from LicensePassphrase): 00363729
Overwrite ByteCode_Key to : 0x00363729
Bytecode_MT_XorKey: 00363729
Copy of IncludeXorKey in Header_MoreData: 0xE9FC23B1
unknown Data: 8501A8C0 E3FC1B00 2690 00 00
EvalTimeMin: 4/16/2012 8:10:00 AM   128330D1 '+0500DA46'=>4F8BD3D8 seconds since 1.1.1970
EvalTimeMax: 4/16/2012 8:10:00 AM   4A8AF992 '+3D08A307'=>4F8BD3D8 seconds since 1.1.1970
BodyStartOffset: 0x000000E4

=========> S t a g e  6  -  Extracting & Inflating IC_body from RawData (->IC_body.bin)

000000E8  Body_MT_Seed: FCB9323E
000000EC  Bytecode_MT_Seed: 7A727B78

=========> S t a g e  7  -  Reading IC_body.bin


=========> S t a g e  8  -  Read function body data

Reading Body
00000008 -> 00000002
S2[Fixed Size 0x70]:
0000007A ->  00000002
 Skipped3 ->  00000000
 FuncNameStart ->  00000000 00000000
 CmdData ->  00000000
 Args ->  00000000
 ArgsMin ->  00000000
 php4Extra ->  026B1970 026B0070 03E0C698 0428F6B0 00000022 00000022
 Skipped1 ->  0000000F 00000000 00000000
 PHPFileNamePtr ->  FFFFFFFF
 Php5-O1  00000000
 Php5-O1Count  00000000 00000000 00000000 00000000 00000000 026B1B88 04010005 0806A9FD 00000000 00000000
 
00000079 -> FunctionName:  function {MainFunction}
 
00000082 -> 00000022<-CmdCount
byteCmds[Elementsize=0x2] Elements: 00000023
Command(Encrypted)
------------------
041A
1E0B
003D
09A5
048F
01B2
046A
04C8
014A
062B
098E
0721
07EC
02FF
0277
051E
07F9
074D
0269
02E9
051B
0761
0741
021F
0201
05A5
07F8
0771
02C6
020E
0260
025C
02C9
0259
0095
CmdParams[Elementsize=0x14] Elements: 00000036
Type      Op1       Op2       Flags5    Flags
---------------------------------------------
00000001   00000002   00000019   00000002   00420103
00000001   0000001C   0000000C   00000002   00420103
00000008   00000001   00000000   00000000   00000000
00000004   00000000   00000001   00000000   00000000
00000001   0000002A   0000000B   00000002   00420103
00000004   00000018   00000001   00000000   00000000
00000001   FFFFFF4C   00000007   00000002   00420103
00000001   FFFFFDD8   00000004   00000002   00420103
00000004   00000048   00000000   00000000   00000000
00000004   00000048   00000008   00000000   00000000
00000008   00000001   00000000   00000000   00000000
00000004   00000060   00000000   00000000   00000000
00000004   00000030   00000000   00000000   00000000
00000001   FFFFFE99   00000001   00000002   00420103
00000008   00000000   00000001   00000000   00000000
00000004   00000078   00000001   00000000   00000000
00000004   00000030   00000010   00000000   00000000
00000004   00000060   00000008   00000000   00000000
00000001   00000036   00000002   00000002   00420103
00000001   0000003A   0000005A   00000002   00420103
00000002   000000A8   00000000   00000000   00000000
00000001   00000096   00000007   00000002   00420103
00000004   00000090   00000000   00000000   00000000
00000001   FFFFFE99   00000001   00000002   00420103
00000008   00000000   00000001   00000000   00000000
00000004   000000C0   00000000   00000000   00000000
00000004   00000090   00000000   00000000   00000000
00000002   000000A8   00000000   00000000   00000000
00000004   000000C0   00000010   00000000   00000000
00000001   0000009E   0000000F   00000002   00420103
00000002   000000F0   00000000   00000000   00000000
00000001   000000AE   00000007   00000002   00420103
00000004   000000D8   00000000   00000000   00000000
00000001   FFFFFE99   00000001   00000002   00420103
00000008   00000000   00000001   00000000   00000000
00000004   00000108   00000000   00000000   00000000
00000004   000000D8   00000000   00000000   00000000
00000002   000000F0   00000000   00000000   00000000
00000004   00000108   00000010   00000000   00000000
00000001   000000B6   0000000F   00000002   00420103
00000002   00000138   00000000   00000000   00000000
00000001   000000C6   00000005   00000002   00420103
00000004   00000120   00000000   00000000   00000000
00000001   FFFFFE99   00000001   00000002   00420103
00000008   00000000   00000001   00000000   00000000
00000004   00000150   00000000   00000000   00000000
00000004   00000120   00000000   00000000   00000000
00000002   00000138   00000000   00000000   00000000
00000004   00000150   00000010   00000000   00000000
00000001   000000CC   00000190   00000002   00420103
00000001   0000025E   00000193   00000002   00420103
00000001   000003F2   00000194   00000002   00420103
00000001   00000588   00000002   00000002   00420103
00000001   00000001   00000038   00000002   00120101
StringData [0000058B]
00000A97 -> C0 DE 64 61 74 65 5F 64 65 66 61 75 6C 74 5F 74 69 6D 65 7A 6F 6E 65 5F 73 65 74 00 41 73 69 61 2F 4A 61 6B 61 72 74 61 00 00 70 65 72 69 6B 73 61 72 6F 6F 74 00 3C 73 00 00 63 72 69 70 74 20 4C 61 6E 67 75 61 67 65 3D 22 4A 61 76 61 53 63 72 69 70 74 22 3E 0D 0A 76 61 72 20 74 69 6D 65 72 49 44 20 3D 20 6E 75 6C 6C 3B 0D 0A 76 61 72 20 74 69 6D 65 72 52 75 6E 6E 69 6E 67 20 3D 20 66 61 6C 73 65 3B 0D 0A 76 61 72 20 6D 65 6E 69 74 20 3D 20 00 00 6D 69 6E 75 74 65 73 00 3B 0D 0A 76 61 72 20 64 65 74 69 6B 20 3D 20 00 73 65 63 6F 6E 64 73 00 3B 0D 0A 76 61 72 20 6A 61 6D 6B 75 20 3D 20 00 68 6F 75 72 73 00 3B 0D 0A 0D 0A 76 61 72 20 6E 20 3D 20 6E 65 77 20 44 61 74 65 28 29 3B 0D 0A 2F 2F 76 61 72 20 6C 6D 65 6E 69 74 20 3D 20 6E 2E 67 65 74 4D 69 6E 75 74 65 73 28 29 3B 0D 0A 76 61 72 20 6C 64 65 74 69 6B 20 3D 20 6E 2E 67 65 74 53 65 63 6F 6E 64 73 28 29 3B 0D 0A 2F 2F 76 61 72 20 6C 6A 61 6D 20 3D 20 6E 2E 67 65 74 48 6F 75 72 73 28 29 3B 0D 0A 0D 0A 0D 0A 66 75 6E 63 74 69 6F 6E 20 73 74 6F 70 6
ÀÞdate_default_timezone_set.Asia/Jakarta..periksaroot.<s..cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = ..minutes.;
var detik = .seconds.;
var jamku = .hours.;

var n = new Date();
//var lmenit = n.getMinutes();
var ldetik = n.getSeconds();
//var ljam = n.getHours();


function stopclock (){
        if(timerRunning)
                clearTimeout(timerID);
        timerRunning = false;
}


function showtime () {
        var now = new Date();
//        var hours = now.getHours();
 //       var minutes = now.getMinutes();
        var sec..onds = now.getSeconds();

			if (((seconds > ldetik) && (seconds!=0))||(seconds==0 && ldetik==59)) {
				if (detik < 59) {
					detik++;
				} else {
					detik=0;
					if (menit < 59) {
						menit ++;
					} else {
						menit=0;
						if (jamku < 23)  {
							jamku++;
						} else {
							jamku=0;
						}
					}
				}
				
			}
			ldetik=seconds;

        var timeValue ;
 .       timeValue = ((jamku < 10) ? "0" : "") + jamku;
        timeValue += ((menit < 10) ? ":0" : ":") + menit;
        timeValue += ((detik < 10) ? ":0" : ":") + detik;
        window.status = timeValue;
       jam.value= timeValue;
        timerID = setTimeout("showtime()",500);
        timerRunning = true;

}
function startclock () {
        stopclock();
        showtime();
}
</script>..
.
Length of unprocessed data: 00000004

=========> S t a g e  9  -  Interpreting IC_body/ByteCode

#0000: 0x3B ZEND_INIT_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x04()
op2   : 01->CONST   00000002 00000019  02  03->STRING 01->ref 0042
        KeyWord: date_default_timezone_set
----------------------------------------------------------------
[1] 'date_default_timezone_set
....................................................................
Buf: echo " <br/> Developed by &#169; SUTEKI | <a style="color:#FC0;text-decoration:none;" href='http://www.suteki.co.id' target=blank'> suteki.co.id </a></p>\n</div>\n<!-- End Footer -->"Return (1)
______________________________________________________________________
#0001: 0x41 ZEND_SEND_VAL   LineNo: 0x0000  Flags: 0x1E()
op1   : 01->CONST   0000001C 0000000C  02  03->STRING 01->ref 0042
        KeyWord: Asia/Jakarta
op2   : 08->UNUSED  00000001 00000000  00  00->NULL   00->val 0000
        extended_value(from File): 003D
----------------------------------------------------------------
[1] 'date_default_timezone_set
....................................................................
Comment: Arg[1] = "Asia/Jakarta"
....................................................................
Buf: echo " <br/> Developed by &#169; SUTEKI | <a style="color:#FC0;text-decoration:none;" href='http://www.suteki.co.id' target=blank'> suteki.co.id </a></p>\n</div>\n<!-- End Footer -->"Return (1)
______________________________________________________________________
#0002: 0x3D ZEND_DO_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x09()
result: 04->VAR     00000000 00000001  00  00->NULL   00->val 0000
        extended_value(from Flag): 0001
====================================================================
echo " <br/> Developed by &#169; SUTEKI | <a style="color:#FC0;text-decoration:none;" href='http://www.suteki.co.id' target=blank'> suteki.co.id </a></p>\n</div>\n<!-- End Footer -->"Return (1)date_default_timezone_set("Asia/Jakarta");
______________________________________________________________________
#0003: 0x3B ZEND_INIT_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x04()
op2   : 01->CONST   0000002A 0000000B  02  03->STRING 01->ref 0042
        KeyWord: periksaroot
----------------------------------------------------------------
[1] 'periksaroot
______________________________________________________________________
#0004: 0x3D ZEND_DO_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x01()
result: 04->VAR     00000018 00000001  00  00->NULL   00->val 0000
====================================================================
periksaroot();
______________________________________________________________________
#0005: 0x3B ZEND_INIT_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x04()
op2   : 01->CONST   FFFFFF4C 00000007  02  03->STRING 01->ref 0042
        KeyWord: getdate
----------------------------------------------------------------
[1] 'getdate
______________________________________________________________________
#0006: 0x3B ZEND_INIT_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x04()
op2   : 01->CONST   FFFFFDD8 00000004  02  03->STRING 01->ref 0042
        KeyWord: time
----------------------------------------------------------------
[1] 'getdate
[2] 'time
______________________________________________________________________
#0007: 0x3D ZEND_DO_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x01()
result: 04->VAR     00000048 00000000  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'getdate
[2] 'time()
______________________________________________________________________
#0008: 0x6A ZEND_SEND_VAR_NO_REF   LineNo: 0x0000  Flags: 0x06()
op1   : 04->VAR     00000048 00000008  00  00->NULL   00->val 0000
op2   : 08->UNUSED  00000001 00000000  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'getdate
[2] 'time()
______________________________________________________________________
#0009: 0x3D ZEND_DO_FCALL_BY_NAME   LineNo: 0x0000  Flags: 0x09()
result: 04->VAR     00000060 00000000  00  00->NULL   00->val 0000
        extended_value(from Flag): 0001
----------------------------------------------------------------
[1] 'getdate
[2] 'time()()
______________________________________________________________________
#000A: 0x53 ZEND_FETCH_W   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     00000030 00000000  00  00->NULL   00->val 0000
op1   : 01->CONST   FFFFFE99 00000001  02  03->STRING 01->ref 0042
        KeyWord: n
op2   : 08->UNUSED  00000000 00000001  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'getdate
[2] 'time()()
[3] '$n
______________________________________________________________________
#000B: 0x26 ZEND_ASSIGN   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     00000078 00000001  00  00->NULL   00->val 0000
op1   : 04->VAR     00000030 00000010  00  00->NULL   00->val 0000
op2   : 04->VAR     00000060 00000008  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'getdate
Correcting Stack error...
====================================================================
$n=time()()getdate;
______________________________________________________________________
#000C: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   00000036 00000002  02  03->STRING 01->ref 0042
        KeyWord: <s
====================================================================
echo "<s";
______________________________________________________________________
#000D: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   0000003A 0000005A  02  03->STRING 01->ref 0042
        KeyWord: cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
====================================================================
echo "cript Language="JavaScript">\nvar timerID = null;\nvar timerRunning = false;\nvar menit = ";
______________________________________________________________________
#000E: 0x63 ZEND_FETCH_CONSTANT   LineNo: 0x0000  Flags: 0x05()
result: 02->TMP_VAR 000000A8 00000000  00  00->NULL   00->val 0000
op2   : 01->CONST   00000096 00000007  02  03->STRING 01->ref 0042
        KeyWord: minutes
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
______________________________________________________________________
#000F: 0x50 ZEND_FETCH_R   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     00000090 00000000  00  00->NULL   00->val 0000
op1   : 01->CONST   FFFFFE99 00000001  02  03->STRING 01->ref 0042
        KeyWord: n
op2   : 08->UNUSED  00000000 00000001  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
______________________________________________________________________
#0010: 0x51 ZEND_FETCH_DIM_R   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     000000C0 00000000  00  00->NULL   00->val 0000
op1   : 04->VAR     00000090 00000000  00  00->NULL   00->val 0000
op2   : 02->TMP_VAR 000000A8 00000000  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
______________________________________________________________________
#0011: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 04->VAR     000000C0 00000010  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
______________________________________________________________________
#0012: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   0000009E 0000000F  02  03->STRING 01->ref 0042
        KeyWord: ;
var detik = 
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
....................................................................
Buf: echo ";\nvar detik = "
______________________________________________________________________
#0013: 0x63 ZEND_FETCH_CONSTANT   LineNo: 0x0000  Flags: 0x05()
result: 02->TMP_VAR 000000F0 00000000  00  00->NULL   00->val 0000
op2   : 01->CONST   000000AE 00000007  02  03->STRING 01->ref 0042
        KeyWord: seconds
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
....................................................................
Buf: echo ";\nvar detik = "
______________________________________________________________________
#0014: 0x50 ZEND_FETCH_R   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     000000D8 00000000  00  00->NULL   00->val 0000
op1   : 01->CONST   FFFFFE99 00000001  02  03->STRING 01->ref 0042
        KeyWord: n
op2   : 08->UNUSED  00000000 00000001  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
....................................................................
Buf: echo ";\nvar detik = "
______________________________________________________________________
#0015: 0x51 ZEND_FETCH_DIM_R   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     00000108 00000000  00  00->NULL   00->val 0000
op1   : 04->VAR     000000D8 00000000  00  00->NULL   00->val 0000
op2   : 02->TMP_VAR 000000F0 00000000  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
....................................................................
Buf: echo ";\nvar detik = "
______________________________________________________________________
#0016: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 04->VAR     00000108 00000010  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
....................................................................
Buf: echo ";\nvar detik = "
______________________________________________________________________
#0017: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   000000B6 0000000F  02  03->STRING 01->ref 0042
        KeyWord: ;
var jamku = 
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "
______________________________________________________________________
#0018: 0x63 ZEND_FETCH_CONSTANT   LineNo: 0x0000  Flags: 0x05()
result: 02->TMP_VAR 00000138 00000000  00  00->NULL   00->val 0000
op2   : 01->CONST   000000C6 00000005  02  03->STRING 01->ref 0042
        KeyWord: hours
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "
______________________________________________________________________
#0019: 0x50 ZEND_FETCH_R   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     00000120 00000000  00  00->NULL   00->val 0000
op1   : 01->CONST   FFFFFE99 00000001  02  03->STRING 01->ref 0042
        KeyWord: n
op2   : 08->UNUSED  00000000 00000001  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "
______________________________________________________________________
#001A: 0x51 ZEND_FETCH_DIM_R   LineNo: 0x0000  Flags: 0x07()
result: 04->VAR     00000150 00000000  00  00->NULL   00->val 0000
op1   : 04->VAR     00000120 00000000  00  00->NULL   00->val 0000
op2   : 02->TMP_VAR 00000138 00000000  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "
______________________________________________________________________
#001B: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 04->VAR     00000150 00000010  00  00->NULL   00->val 0000
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "
______________________________________________________________________
#001C: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   000000CC 00000190  02  03->STRING 01->ref 0042
        KeyWord: ;

var n = new Date();
//var lmenit = n.getMinutes();
var ldetik = n.getSeconds();
//var ljam = n.getHours();


function stopclock (){
        if(timerRunning)
                clearTimeout(timerID);
        timerRunning = false;
}


function showtime () {
        var now = new Date();
//        var hours = now.getHours();
 //       var minutes = now.getMinutes();
        var sec
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "echo ";\n\nvar n = new Date();\n//var lmenit = n.getMinutes();\nvar ldetik = n.getSeconds();\n//var ljam = n.getHours();\n\n\nfunction stopclock (){\n        if(timerRunning)\n                clearTimeout(timerID);\n        timerRunning = false;\n}\n\n\nfunction showtime () {\n        var now = new Date();\n//        var hours = now.getHours();\n //       var minutes = now.getMinutes();\n        var sec"
______________________________________________________________________
#001D: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   0000025E 00000193  02  03->STRING 01->ref 0042
        KeyWord: onds = now.getSeconds();

			if (((seconds > ldetik) && (seconds!=0))||(seconds==0 && ldetik==59)) {
				if (detik < 59) {
					detik++;
				} else {
					detik=0;
					if (menit < 59) {
						menit ++;
					} else {
						menit=0;
						if (jamku < 23)  {
							jamku++;
						} else {
							jamku=0;
						}
					}
				}
				
			}
			ldetik=seconds;

        var timeValue ;
 
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "echo ";\n\nvar n = new Date();\n//var lmenit = n.getMinutes();\nvar ldetik = n.getSeconds();\n//var ljam = n.getHours();\n\n\nfunction stopclock (){\n        if(timerRunning)\n                clearTimeout(timerID);\n        timerRunning = false;\n}\n\n\nfunction showtime () {\n        var now = new Date();\n//        var hours = now.getHours();\n //       var minutes = now.getMinutes();\n        var sec"echo "onds = now.getSeconds();\n\n			if (((seconds > ldetik) && (seconds!=0))||(seconds==0 && ldetik==59)) {\n				if (detik < 59) {\n					detik++;\n				} else {\n					detik=0;\n					if (menit < 59) {\n						menit ++;\n					} else {\n						menit=0;\n						if (jamku < 23)  {\n							jamku++;\n						} else {\n							jamku=0;\n						}\n					}\n				}\n				\n			}\n			ldetik=seconds;\n\n        var timeValue ;\n "
______________________________________________________________________
#001E: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   000003F2 00000194  02  03->STRING 01->ref 0042
        KeyWord:        timeValue = ((jamku < 10) ? "0" : "") + jamku;
        timeValue += ((menit < 10) ? ":0" : ":") + menit;
        timeValue += ((detik < 10) ? ":0" : ":") + detik;
        window.status = timeValue;
       jam.value= timeValue;
        timerID = setTimeout("showtime()",500);
        timerRunning = true;

}
function startclock () {
        stopclock();
        showtime();
}
</script>
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "echo ";\n\nvar n = new Date();\n//var lmenit = n.getMinutes();\nvar ldetik = n.getSeconds();\n//var ljam = n.getHours();\n\n\nfunction stopclock (){\n        if(timerRunning)\n                clearTimeout(timerID);\n        timerRunning = false;\n}\n\n\nfunction showtime () {\n        var now = new Date();\n//        var hours = now.getHours();\n //       var minutes = now.getMinutes();\n        var sec"echo "onds = now.getSeconds();\n\n			if (((seconds > ldetik) && (seconds!=0))||(seconds==0 && ldetik==59)) {\n				if (detik < 59) {\n					detik++;\n				} else {\n					detik=0;\n					if (menit < 59) {\n						menit ++;\n					} else {\n						menit=0;\n						if (jamku < 23)  {\n							jamku++;\n						} else {\n							jamku=0;\n						}\n					}\n				}\n				\n			}\n			ldetik=seconds;\n\n        var timeValue ;\n "echo "       timeValue = ((jamku < 10) ? "0" : "") + jamku;\n        timeValue += ((menit < 10) ? ":0" : ":") + m
______________________________________________________________________
#001F: 0x28 ZEND_ECHO   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   00000588 00000002  02  03->STRING 01->ref 0042
        KeyWord: [Obfuscated]0D 0A 
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "echo ";\n\nvar n = new Date();\n//var lmenit = n.getMinutes();\nvar ldetik = n.getSeconds();\n//var ljam = n.getHours();\n\n\nfunction stopclock (){\n        if(timerRunning)\n                clearTimeout(timerID);\n        timerRunning = false;\n}\n\n\nfunction showtime () {\n        var now = new Date();\n//        var hours = now.getHours();\n //       var minutes = now.getMinutes();\n        var sec"echo "onds = now.getSeconds();\n\n			if (((seconds > ldetik) && (seconds!=0))||(seconds==0 && ldetik==59)) {\n				if (detik < 59) {\n					detik++;\n				} else {\n					detik=0;\n					if (menit < 59) {\n						menit ++;\n					} else {\n						menit=0;\n						if (jamku < 23)  {\n							jamku++;\n						} else {\n							jamku=0;\n						}\n					}\n				}\n				\n			}\n			ldetik=seconds;\n\n        var timeValue ;\n "echo "       timeValue = ((jamku < 10) ? "0" : "") + jamku;\n        timeValue += ((menit < 10) ? ":0" : ":") + m
______________________________________________________________________
#0020: 0x3E ZEND_RETURN   LineNo: 0x0000  Flags: 0x02()
op1   : 01->CONST   00000001 00000038  02  01->LONG   01->ref 0012
----------------------------------------------------------------
[1] 'cript Language="JavaScript">
var timerID = null;
var timerRunning = false;
var menit = 
[2] '$n
[3] ';
var detik = 
[4] '$n
[5] ';
var jamku = 
[6] '$n
....................................................................
Buf: echo ";\nvar detik = "echo ";\nvar jamku = "echo ";\n\nvar n = new Date();\n//var lmenit = n.getMinutes();\nvar ldetik = n.getSeconds();\n//var ljam = n.getHours();\n\n\nfunction stopclock (){\n        if(timerRunning)\n                clearTimeout(timerID);\n        timerRunning = false;\n}\n\n\nfunction showtime () {\n        var now = new Date();\n//        var hours = now.getHours();\n //       var minutes = now.getMinutes();\n        var sec"echo "onds = now.getSeconds();\n\n			if (((seconds > ldetik) && (seconds!=0))||(seconds==0 && ldetik==59)) {\n				if (detik < 59) {\n					detik++;\n				} else {\n					detik=0;\n					if (menit < 59) {\n						menit ++;\n					} else {\n						menit=0;\n						if (jamku < 23)  {\n							jamku++;\n						} else {\n							jamku=0;\n						}\n					}\n				}\n				\n			}\n			ldetik=seconds;\n\n        var timeValue ;\n "echo "       timeValue = ((jamku < 10) ? "0" : "") + jamku;\n        timeValue += ((menit < 10) ? ":0" : ":") + m
______________________________________________________________________
#0021: 0x95 ZEND_HANDLE_EXCEPTION   LineNo: 0x0000  Flags: 0x00()
______________________________________________________________________
ERR: Decompiling this function is finish but there's still data on the decompile stack ->Dumping that data now...
FunctionsCount: 0000
Classes: 0000
File sucessfully processes!

